plugins {
    id 'java'
}

group 'com.athaydes.jbuild'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

configurations {
    intTestImplementation.extendsFrom implementation
    intTestRuntimeOnly.extendsFrom runtimeOnly
}

sourceSets {
    myTestClasses {
        java {}
    }
    otherTestClasses {
        java {}
        compileClasspath += sourceSets.myTestClasses.output
    }
    intTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

final String testJarsDir = "$buildDir/test-jars"

tasks.register('myTestJar', Jar) {
    archiveFileName = 'my-tests.jar'
    from sourceSets.myTestClasses.output
    destinationDirectory.set file(testJarsDir)
}

tasks.register('otherTestJar', Jar) {
    archiveFileName = 'other-tests.jar'
    from sourceSets.otherTestClasses.output
    destinationDirectory.set file(testJarsDir)
}

tasks.register('integrationTest', Test) {
    description = 'Runs integration tests.'
    group = 'verification'
    useJUnitPlatform()
    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
    shouldRunAfter test
    it.systemProperty('tests.int-tests.repo', "$buildDir/mvn-repo")
}

check.dependsOn integrationTest

tasks.register('cleanIntegrationTestRepo', Delete) {
    delete "$buildDir/mvn-repo"
}

clean.dependsOn cleanIntegrationTestRepo

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.assertj:assertj-core:3.22.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    intTestImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    intTestImplementation 'org.assertj:assertj-core:3.22.0'
    intTestRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

test {
    dependsOn('myTestJar', 'otherTestJar')
    useJUnitPlatform()
    systemProperty('tests.repo.dir', file('src/test/resources/jbuild/commands/repo').absolutePath)
    systemProperty('tests.test-classes.dir', testJarsDir)
    systemProperty('tests.my-test-classes.jar', "$testJarsDir/my-tests.jar")
    systemProperty('tests.other-test-classes.jar', "$testJarsDir/other-tests.jar")
    systemProperty('tests.real-jars.osgiaas-cli-api.jar', "$rootDir/src/test/real-jars/osgiaas-cli-api-0.7.jar")
    systemProperty('tests.real-jars.jline.jar', "$rootDir/src/test/real-jars/jline-2.14.2.jar")
}

jar {
    manifest {
        attributes 'Main-Class': 'jbuild.cli.Main'
    }
}
